<?xml version="1.0" encoding= "UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
 
<mapper namespace= "admin.board">


	<select id ="list" parameterType="com.mee.sangsil.dto.BoardDto" resultType="com.mee.sangsil.dto.BoardDto">
		/* admin.board.list */

		select @i as totCnt, a.*
		from
		(
			select
				@i := @i + 1 as rowNum
				, CEIL((@j := @j + 1)/#{pageSize}) as pageNum
				, imsi.*
			from(
			
						<include refid="listQuery"/>
						
						order by board.board_id desc
						
				) imsi, (select @i := 0, @j := 0) temp		
		) a			
		where pageNum = #{pageNum}
	</select>
	
	
	<sql id="listQuery">
		/*	listQuery 리스트 쿼리	*/
		select
			board.board_id 
			, board.board_gbn
			, (select cd_nm from t_cd where cd_id = board.board_gbn) board_gbnNM
			, board.board_cat
			, (select cd_nm from t_cd where cd_id = board.board_cat) board_catNM
			, board.board_tag
			, (select cd_nm from t_cd where cd_id = board.board_tag) board_tagNM
			, board.board_title 
			, board.board_txt 
			, board.ans_yn 
			, board.disp_order 
			, board.hit_cnt 
			, board.use_yn 
			, board.in_date 
			, board.in_user 
			, board.in_ip 
			, board.up_date 
			, board.up_user 
			, board.up_ip
			, files.cntFiles
		from t_board as board left outer join (select board_id, board_gbn, use_yn, count(file_id) as cntFiles from t_file where use_yn = 'Y' group by board_id, board_gbn) as files
		on board.board_id = files.board_id
		where board.use_yn = 'Y'
		and board.board_gbn = #{board_gbn }#
		<if test="board_cat != null and board_cat != ''">
			and board.board_cat = #{board_cat }
		</if>
		<if test="board_tag != null and board_tag != ''">
			and board.board_tag = #{board_tag }
		</if>
		<if test="searchValue != null and searchValue != ''">
		and (board.board_title like CONCAT('%', #{searchValue}, '%') or board.board_txt like CONCAT('%', #{searchValue}, '%'))
		</if>
		
	</sql>	
	
	
	<select id ="detail" parameterType="com.mee.sangsil.dto.BoardDto" resultType="com.mee.sangsil.dto.BoardDto">
		/* admin.board.detail */
		select 	
			board.board_id 
			, board.board_gbn
			, (select cd_nm from t_cd where cd_id = board.board_gbn) board_gbnNM
			, board.board_cat
			, (select cd_nm from t_cd where cd_id = board.board_cat) board_catNM
			, board.board_tag
			, (select cd_nm from t_cd where cd_id = board.board_tag) board_tagNM
			, board.board_title 
			, board.board_txt 
			, board.ans_yn 
			, board.disp_order 
			, board.hit_cnt 
			, board.use_yn 
			, board.in_date 
			, board.in_user 
			, board.in_ip 
			, board.up_date 
			, board.up_user 
			, board.up_ip
		from t_board as board
		where board.board_id = #{board_id}
		and board.use_yn = 'Y'
	</select>
	
	<select id ="detailList" parameterType="com.mee.sangsil.dto.BoardDto" resultType="com.mee.sangsil.dto.BoardDto">
		/* admin.board.detail_pre */
		<include refid="listQuery"/>
			and board.board_id &lt; #{board_id} + 3 
			and board.board_id &gt; #{board_id} - 3
			
			order by board.board_id desc
	</select>
	
	
	<select id ="autoSeq" resultType="String" parameterType="HashMap">
		/* admin.board.autoSeq */
		SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES
		 WHERE TABLE_SCHEMA = #{tableSC}
		 AND TABLE_NAME = #{tableNM}
	</select>
	
	<insert id ="insert" parameterType="com.mee.sangsil.dto.BoardDto">
		/* admin.board.insert */
		insert into t_board( 
			board_gbn
			, board_cat
			, board_tag
			, board_title
			, board_txt
			, disp_order
			, in_date
			, in_user
			, in_ip
			, up_date
			, up_user
			, up_ip
		) values ( 
			#{board_gbn}
			, #{board_cat}
			, #{board_tag}
			, #{board_title}
			, #{board_txt}
			, #{disp_order}
			, NOW()
			, #{in_user}
			, #{in_ip}
			, NOW()
			, #{up_user}
			, #{up_ip}
			)
	</insert>
	
	<update id="update" parameterType="com.mee.sangsil.dto.BoardDto">
		/* admin.board.update */
		update t_board 
			set
			board_cat = #{board_cat}
			, board_tag = #{board_tag}
			, board_title = #{board_title}
			, board_txt = #{board_txt}
			, disp_order = #{disp_order}
			, up_date = NOW()
			, up_user = #{up_user}
			, up_ip = #{up_ip}
		where board_id = #{board_id}
	</update>

	<update id="delete" parameterType="com.mee.sangsil.dto.BoardDto">
		/* admin.board.delete */
		update t_board 
			set
			use_yn = 'N'
			, up_date = NOW()
			, up_user = #{up_user}
			, up_ip = #{up_ip}
		where board_id = #{board_id}
	</update>
	
</mapper>
